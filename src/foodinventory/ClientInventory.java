/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package foodinventory;


import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import signinform.*;
import signinform.main.*;
import static signinform.main.connectDB;
import java.sql.*;
import java.util.Calendar;

/**
 *
 * @author 91912
 */


public class ClientInventory extends javax.swing.JFrame {
Connection con;
    inventorybackend inv;
    DefaultTableModel dm;
   ADD_Client acc;
   double sum;
    /**
     * Creates new form ClientInventory
     */
    public ClientInventory() {
        initComponents();
        sum=0;
        inv=new inventorybackend();
        inv.table_update("categTable");
        for(int i=0;i<inv.k;i++)
        {
            String data[]={inv.cat[i]};
            dm=(DefaultTableModel)categorytable.getModel();
            dm.addRow(data);
        }
            
        
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        categorytable = new javax.swing.JTable();
        cartadd = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        purchase = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        cart = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        bill = new javax.swing.JTextArea();
        models = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        price = new javax.swing.JLabel();
        pay = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        categorytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CATEGORY"
            }
        ));
        jScrollPane1.setViewportView(categorytable);

        cartadd.setText("REMOVE");
        cartadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartaddActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel2.setText("INVENTORY");
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 51, 0)));

        purchase.setText("PURCHASE");
        purchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseActionPerformed(evt);
            }
        });

        cart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Quantity", "Price"
            }
        ));
        jScrollPane3.setViewportView(cart);

        bill.setColumns(20);
        bill.setRows(5);
        jScrollPane4.setViewportView(bill);

        models.setText("MODELS");
        models.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelsActionPerformed(evt);
            }
        });

        jButton1.setText("CART");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("    PRICE:");

        pay.setText("PAY");
        pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(models, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pay, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(purchase, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(cartadd, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(purchase)
                            .addComponent(cartadd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(models))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pay)
                .addGap(76, 76, 76))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cartaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartaddActionPerformed
        // TODO add your handling code here:
        int pos=cart.getSelectedRow();
        if(pos>-1)
        {
            DefaultTableModel dm=(DefaultTableModel)cart.getModel();
            dm.removeRow(pos);
        }
        else {
            JOptionPane.showMessageDialog(this, "Select a field in cart");
            
        }
        
    }//GEN-LAST:event_cartaddActionPerformed

    private void purchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseActionPerformed
        // TODO add your handling code here:
      sum=0;
      bill.setText("");
      bill.append("Model\tItems\tPrice\n");
        int rows=cart.getRowCount();
        int pos;
        for(int i=0;i<rows;i++)
        {pos=i;
            bill.append(cart.getValueAt(pos, 0).toString()+"\t"+cart.getValueAt(pos, 1).toString()+"\t"+cart.getValueAt(pos,2).toString());
 bill.append("\n");
 sum+=Double.parseDouble(cart.getValueAt(pos, 2).toString());
 
 
        }
        price.setText("Rs. "+sum);
        
    }//GEN-LAST:event_purchaseActionPerformed

    private void modelsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelsActionPerformed
        // TODO add your handling code here:
        
          
        int pos=categorytable.getSelectedRow();
       
        if(pos>=0)
        {
            try{
                String cat=dm.getValueAt(pos, 0).toString();
                   
        
        con= connectDB();
    
                
                
       
                String q1="create table if not exists "+cat+"(Model varchar(20),Quantity varchar(20),Price varchar(20),PRIMARY KEY(Model))";
               
            
           PreparedStatement st;
                st = con.prepareStatement(q1);
         
         
          
            st.executeUpdate();
            acc=new ADD_Client(cat);  
            acc.setVisible(true);
            
            
            }
            catch(Exception e)
            {
                System.out.println(e.getMessage());
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Select a field");
        }

    }//GEN-LAST:event_modelsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel dm1=(DefaultTableModel)cart.getModel();
            System.out.println(acc.k);
            for(int i=0;i<acc.k;i++)
            {
                String arr[]={acc.cat[i],acc.items[i],acc.price[i]};
                dm1=(DefaultTableModel)cart.getModel();
                dm1.addRow(arr);
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payActionPerformed
        // TODO add your handling code here:
        try{
            Calendar cal=Calendar.getInstance();
            String date=cal.DATE+"/"+cal.MONTH+"/"+cal.YEAR;
            int c=cart.getRowCount();
            String q1="insert into userrec(userID,Date,Category,Count) values(?,?,?,?)";
            PreparedStatement ps;
            for(int i=0;i<c;i++)
            {
                ps=con.prepareStatement(q1);
                ps.setString(1,signinform.login.add() );
                ps.setString(2, date);
                ps.setString(3,cart.getValueAt(i,0).toString());
                ps.setString(4,cart.getValueAt(i,2).toString());
                ps.executeUpdate();
                
            }
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
            
        }
    }//GEN-LAST:event_payActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientInventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea bill;
    private javax.swing.JTable cart;
    private javax.swing.JButton cartadd;
    private javax.swing.JTable categorytable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton models;
    private javax.swing.JButton pay;
    private javax.swing.JLabel price;
    private javax.swing.JButton purchase;
    // End of variables declaration//GEN-END:variables
}
